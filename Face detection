import cv2 as cv
import numpy as np

facecascade = cv.CascadeClassifier("haarcascade.xml")

img = cv.imread('image.jpeg')
re_img = cv.resize(img, (500, 640))
# print(re_img.shape)
blank = np.zeros_like(re_img)
# ____OR____
# blank = np.zeros((640, 500, 3), dtype='uint8')
faces = facecascade.detectMultiScale(re_img, 1.1, 4)
for (x, y, w, h) in faces:
    print(x, y, w, h)
    cv.rectangle(re_img, (x, y), (x+w, y+h), (0, 255, 0), 2)
    mask = cv.circle(blank, (x+w//2, y+h//2), (y+h//2), (255, 255, 255), -1)
    frame = cv.bitwise_and(re_img, mask)
    cv.imshow("re_img", re_img)
    cv.imshow('mask', mask)
    cv.imshow('frame', frame)

cv.waitKey(0)
